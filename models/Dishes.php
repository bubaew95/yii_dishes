<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "dishes".
 *
 * @property int $id
 * @property string $title Название
 * @property int $active Сушествует или нет
 *
 * @property DishToIngredients[] $dishToIngredients
 */
class Dishes extends \yii\db\ActiveRecord
{

    public $arrayIng; //Массиф ингредиентов
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'dishes';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['active'], 'integer'],
            ['arrayIng', 'safe'],
            [['title'], 'string', 'max' => 255],
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        $this->IngUpdate();
    }

    public function IngUpdate()
    {
        $IngIds = $this->getIngredients()->select('id')->all();
        $NewIngId = $this->arrayIng === null ? $IngIds : $this->arrayIng;
        foreach (array_filter(array_diff($NewIngId, $IngIds)) as $itemIds) :
            if($item = Ingredients::find()->where(['id' => $itemIds])->one()) {
                $this->link('ingredients', $item);
            }
        endforeach;
        foreach (array_filter(array_diff($IngIds, $NewIngId)) as $itemIds) :
            if($item = Ingredients::find()->where(['id' => $itemIds])->one())
                $this->unlink('ingredients', $item, true);
        endforeach;
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Название',
            'active' => 'Активаность',
            'arrayIng' => 'Ингредиенты',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDishToIngredients()
    {
        return $this->hasMany(DishToIngredients::className(), ['id_dish' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getIngredients()
    {
        return $this->hasMany(Ingredients::className(), ['id' => 'id_ing'])
            ->viaTable('dish_to_ingredients', ['id_dish' => 'id']);
    }
}
